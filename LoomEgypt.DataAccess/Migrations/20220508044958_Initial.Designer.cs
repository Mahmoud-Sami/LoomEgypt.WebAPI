// <auto-generated />
using LoomEgypt.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LoomEgypt.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20220508044958_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("LoomEgypt.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("ShippingFees")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Description-1",
                            Name = "Category-1",
                            ShippingFees = 5.00m
                        },
                        new
                        {
                            Id = 2,
                            Description = "Description-2",
                            Name = "Category-2",
                            ShippingFees = 7.80m
                        });
                });

            modelBuilder.Entity("LoomEgypt.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "Nike",
                            CategoryID = 1,
                            Description = "Product Description-1",
                            Name = "Product-1"
                        },
                        new
                        {
                            Id = 2,
                            Brand = "Canon",
                            CategoryID = 2,
                            Description = "Product Description-2",
                            Name = "Product-2"
                        });
                });

            modelBuilder.Entity("LoomEgypt.Domain.Entities.ProductAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductID");

                    b.ToTable("ProductAttributes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Key = "Color",
                            ProductID = 1,
                            Value = "Black"
                        },
                        new
                        {
                            Id = 2,
                            Key = "Size",
                            ProductID = 1,
                            Value = "XL"
                        },
                        new
                        {
                            Id = 3,
                            Key = "Color",
                            ProductID = 2,
                            Value = "Yellow"
                        },
                        new
                        {
                            Id = 4,
                            Key = "Size",
                            ProductID = 2,
                            Value = "256GB"
                        });
                });

            modelBuilder.Entity("LoomEgypt.Domain.Entities.ProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ImageDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("productID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("productID");

                    b.ToTable("ProductImages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageDescription = "Image Description",
                            ImagePath = "https://picsum.photos/id/1/200/300",
                            productID = 1
                        },
                        new
                        {
                            Id = 2,
                            ImagePath = "https://picsum.photos/id/10/200/300",
                            productID = 1
                        },
                        new
                        {
                            Id = 3,
                            ImagePath = "https://picsum.photos/id/100/200/300",
                            productID = 2
                        },
                        new
                        {
                            Id = 4,
                            ImagePath = "https://picsum.photos/id/1000/200/300",
                            productID = 2
                        });
                });

            modelBuilder.Entity("LoomEgypt.Domain.Entities.ProductInventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductID")
                        .IsUnique();

                    b.ToTable("ProductsInventory");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ProductID = 1,
                            Quantity = 5
                        },
                        new
                        {
                            Id = 2,
                            ProductID = 2,
                            Quantity = 7
                        });
                });

            modelBuilder.Entity("LoomEgypt.Domain.Entities.Product", b =>
                {
                    b.HasOne("LoomEgypt.Domain.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("LoomEgypt.Domain.Entities.ProductAttribute", b =>
                {
                    b.HasOne("LoomEgypt.Domain.Entities.Product", null)
                        .WithMany("Attributes")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LoomEgypt.Domain.Entities.ProductImage", b =>
                {
                    b.HasOne("LoomEgypt.Domain.Entities.Product", null)
                        .WithMany("Gallery")
                        .HasForeignKey("productID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LoomEgypt.Domain.Entities.ProductInventory", b =>
                {
                    b.HasOne("LoomEgypt.Domain.Entities.Product", "Product")
                        .WithOne("ProductInventory")
                        .HasForeignKey("LoomEgypt.Domain.Entities.ProductInventory", "ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("LoomEgypt.Domain.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("LoomEgypt.Domain.Entities.Product", b =>
                {
                    b.Navigation("Attributes");

                    b.Navigation("Gallery");

                    b.Navigation("ProductInventory");
                });
#pragma warning restore 612, 618
        }
    }
}
